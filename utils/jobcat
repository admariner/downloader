#!/usr/bin/env ruby
#
# Usage:
#
#   $ cat foo.log | ./compare <request-limit> [request-offset]
#
# Example:
#
#   $ cat foo.log | ./compare 1000
require "json"
require "net/http"

DOWNLOADER = URI(ENV["DOWNLOADER_ENDPOINT"])
AGGR_LIMIT = Integer(ENV["AGGR_LIMIT"])

raise "Nothing passed to STDIN" if STDIN.tty?

trap("SIGINT") {
  puts "Exit signal caught! Exiting."
  abort
}

require "pry"
require "pry-byebug"

i = 0
success = 0
error = 0

Net::HTTP.start(DOWNLOADER.host, DOWNLOADER.port) do |http|
  STDIN.each do |line|
    line.chomp!
    i += 1

    begin
      download_uri = URI.parse(line)
    rescue => e
      puts e
      puts "Skipping malformed URL: #{line}"
      next
    end

    if !download_uri.absolute?
      puts "Skipping relative URL: #{line}"
      next
    end

    print "Enqueueing job ##{i} ... "

    req = Net::HTTP::Post.new(DOWNLOADER, "Content-Type" => "application/json")
    req.body = {
      aggr_id: download_uri, aggr_limit: AGGR_LIMIT,
      url: download_uri, callback_url: "http://localhost:8080",
      extra: Time.now.to_s
    }.to_json

    res = http.request(req)

    if res.code == "201"
      success += 1
      print "OK!\n"
    else
      error += 1
    end
  end
end

puts "Total requests: #{i} | Successful: #{success} | Error: #{error}"

